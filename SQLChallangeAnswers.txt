-- 1. What is the total amount each customer spent at the restaurant?

select mem.customer_id, sum(price) as total_spent from sales s join members mem on s.customer_id = mem.customer_id 
join menu m on m.product_id = s.product_id
group by mem.customer_id order by total_spent desc;

-- 2. How many days has each customer visited the restaurant?

select mem.customer_id, count(distinct s.order_date) as days_visited from sales s join members mem on s.customer_id = mem.customer_id
group by mem.customer_id order by days_visited desc;

-- 3. What was the first item from the menu purchased by each customer?

select * from 
	(select s.customer_id, m.product_name, s.order_date, row_number() over (partition by s.customer_id order by s.order_date asc) as rcount
	from sales s join menu m on s.product_id = m.product_id
) as a where rcount = 1;


-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?

select m.product_name, count(s.product_id) as amt_ordered from sales s 
join menu m on s.product_id = m.product_id group by m.product_name order by amt_ordered desc;


-- 5. Which item was the most popular for each customer?

select s.customer_id,
count(case when s.product_id = 1 then 1 end) as sushi_ordered,
count(case when s.product_id = 2 then 2 end) as curry_ordered, 
count(case when s.product_id = 3 then 1 end) as ramen_ordered
from sales s join menu m on s.product_id = m.product_id group by s.customer_id;


-- 6. Which item was purchased first by the customer after they became a member?

select * from 
	(select mem.customer_id, mem.join_date, s.order_date, m.product_name, row_number() over(partition by mem.customer_id order by 	s.order_date asc) as r_count
    	from members mem join sales s on mem.customer_id = s.customer_id join menu m on m.product_id = s.product_id 
    	where mem.join_date < s.order_date) as a 
where r_count = 1;

-- 7. Which item was purchased just before the customer became a member?

select * from 
	(select mem.customer_id, mem.join_date, s.order_date, m.product_name, row_number() over(partition by mem.customer_id order by 	s.order_date desc) as r_count
	from members mem join sales s on mem.customer_id = s.customer_id join menu m on m.product_id = s.product_id 
   	where mem.join_date > s.order_date) as a 
where r_count = 1;

-- 8. What is the total items and amount spent for each member before they became a member?

select mem.customer_id, count(s.product_id) as items_purchased, sum(m.price) as amt_spent from members mem join sales s on mem.customer_id = s.customer_id
join menu m on s.product_id = m.product_id where s.order_date < mem.join_date group by mem.customer_id;

-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

select customer_id, sum(case when m.product_id = 1 then m.price * 20 else m.price * 10 end) as points_earned from
menu m join sales s on m.product_id = s.product_id group by customer_id;


-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at 
--the end of January?

select s.customer_id, sum(case when s.order_date between mem.join_date and mem.join_date + interval 6 day then m.price * 20 else
case when m.product_id = 1 then m.price * 20 else m.price * 10 end end) as points_aquired
from members mem join sales s on s.customer_id = mem.customer_id join menu m on m.product_id = s.product_id 
where s.order_date < '2021-02-01' group by s.customer_id order by points_aquired desc;