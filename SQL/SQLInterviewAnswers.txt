1. Types of commands and their examples.
	DataDefinitionLaguage - Structure of tables: CREATE, ALTER, DROP, TRUNCATE
	DataMainpulationLanguage - INSERT, UPDATE, DELETE,
	DataControlLanguage - GRANT, REVOKE
	TCL - COMMIT, ROLLBACK
	DataQueryLanguage - SELECT

2. What is Normalization and denormalization?
	-Normalization is the process of reducing redundancies and improving consistency in data of a database
	-denormalization is doing the opposite to gain performance

3. Explain 1NF, 2NF, 3NF.
	1NF - Each cell should hold only one value, and each column should have a unique name
	2NF - Requires each attribute to be dependent on a priamty key
	3NF - Requires that there are no transitive dependencys in the table i.e you can not go A->B B->C to A->C

4. Share use case where you had to do denormalization in database..
	-Generally you denormalize databases to decrease the time in which your operations run, it will increase the storage size of the database, but it will run faster so its worth it.

5. What is primary key and foreign key?
	-Primary Key is a a unique, not null value used to be the main idenifier in a table
	-Foreign key is a primary key from another table

6. what is alternate and candidate key?
	-Candidate Keys are any column that could be a primary key 
	-Alterante Keys are any candidate key that is not the primary key

7. What are window functions?
	-Window Functions perform calculations across a set of table rows like agregates but they retain their seperate identities
	-Aggregrate functions (when used with over)
	-Ranking Functions
	-Value Window functions (FIRST_VALUE(), LAG(), LAST_VALUE(), LEAD())

8. Explain Ranking Functions?
	-window functions that assign rank based on some order clause
	-RANK(), DENSE_RANK(), ROW_NUMBER()

9. Types of Joins?
	INNER = Returns all rows from both table that match ON condition (basically column they have in common)
	LEFT = Like INNER JOIN, but with all records from left table, with a null value filling in for anywhere the right table does not have a value
	RIGHT = Same as left but right table
	FULL = returns all rows from left and right tables, placing nulls where missing values are
	CROSS = returns all possible combinations of values from two tables 
	SELF = Join between the same table

10. Use case when self join is required.
	-To show a parent child relationsip, i.e cat table with columns cat_id, cat_name, owner_id, mom_id

11. What is subquery?
	-Query inside a query that will run first and pass on output to outer queries

12. What is corelated subquery?
	-Subquery that will execute once for reach row returned by outer query, outer table is referred to in inner query

13. What is CTE? 
	-Common Table Expression
	-Virtual tables (With records and columns) created, used, and eliminated during query execution

14. Find third highest employee based on salary? (Wasnt sure what DB we were referring to, so I used the products table from the classicmodel schema for 4 SQL)
select productName, buyPrice from
	(select productName, buyPrice, row_number() over (order by buyPrice desc)  as priceRank from products) as a 
where priceRank = 3;


15. Find third highest employee based on salary  per department?
select productName, productVendor, buyPrice from 
	(select productName, productVendor, buyPrice, rank() over (partition by productVendor order by buyPrice) as price_rank from products) as a
where price_rank = 3 order by  buyPrice desc;


16. How to find duplicate values in a single column?
	-select productScale, count(productScale) from products group by productScale having count(productScale) > 1;


17. How to find duplicate values in a multiple column?
	-select * from (select productLine, productScale, count(*) from products group by productLine, productScale having count(*)>1) as b;


18. What are ACID properties?
	A - Atomicity = Either transaction completely finishes or it cancels
	C - Consistency = DB must be consistent before and after transaction
	I - Isolation = Multiple transcations can occur without interfering with each other
	D - Durability = Succesful transactions remain even when the system fails

19. Diff between union and union all
	-UNION will not return duplicate rows in resulting query and is slower
	-UNION all will return duplicates

20. Diff between primary key and unique key
	-Primary key is unique and not null
	-Unique key can have a single null value

21. Diff between truncate and delete
	-Delete used to delete specific rows, can have a where clause, is slower than truncate, need delete permission and is DML command
	-Truncate deletes all rows from table, DDL language, cant have a where cause, need ALTER permission to use

22. SQL query execution order.
	FROM -> JOIN -> WHERE -> ORDERBY -> GROUPBY -> SELECT -> HAVING
	
